-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_layer_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_15_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_16_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_17_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_18_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_19_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_20_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_21_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_22_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_23_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_24_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_25_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_26_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_27_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_28_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_29_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_30_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_31_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
end;


architecture behav of compute_layer_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv28_FFFFED4 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111011010100";
    constant ap_const_lv27_7FFFF71 : STD_LOGIC_VECTOR (26 downto 0) := "111111111111111111101110001";
    constant ap_const_lv26_5C : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000001011100";
    constant ap_const_lv26_3FFFF97 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111110010111";
    constant ap_const_lv27_7FFFF52 : STD_LOGIC_VECTOR (26 downto 0) := "111111111111111111101010010";
    constant ap_const_lv28_FFFFEB3 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111010110011";
    constant ap_const_lv27_7FFFF4B : STD_LOGIC_VECTOR (26 downto 0) := "111111111111111111101001011";
    constant ap_const_lv28_FFFFE87 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111010000111";
    constant ap_const_lv27_F2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000011110010";
    constant ap_const_lv27_7FFFF46 : STD_LOGIC_VECTOR (26 downto 0) := "111111111111111111101000110";
    constant ap_const_lv28_FFFFE4A : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111001001010";
    constant ap_const_lv28_FFFFEB6 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111010110110";
    constant ap_const_lv28_FFFFE92 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111010010010";
    constant ap_const_lv27_7FFFF5C : STD_LOGIC_VECTOR (26 downto 0) := "111111111111111111101011100";
    constant ap_const_lv24_19 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000011001";
    constant ap_const_lv24_1D : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000011101";
    constant ap_const_lv25_32 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000110010";
    constant ap_const_lv27_9F : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010011111";
    constant ap_const_lv28_FFFFE73 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111001110011";
    constant ap_const_lv26_3FFFF9F : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111110011111";
    constant ap_const_lv26_4A : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000001001010";
    constant ap_const_lv27_7FFFF0B : STD_LOGIC_VECTOR (26 downto 0) := "111111111111111111100001011";
    constant ap_const_lv27_BF : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv16_FF86 : STD_LOGIC_VECTOR (15 downto 0) := "1111111110000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal reg_1745 : STD_LOGIC_VECTOR (16 downto 0);
    signal reg_1749 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_1753 : STD_LOGIC_VECTOR (17 downto 0);
    signal OP1_V_3_cast_fu_1762_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal OP1_V_cast_fu_1787_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal OP1_V_14_cast_fu_1802_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal OP1_V_16_cast_fu_1807_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal OP1_V_17_cast_fu_1812_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal OP1_V_19_cast_fu_1817_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal OP1_V_20_cast_fu_1822_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal data_2_V_read_3_reg_2653 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_5_reg_2659 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_14_reg_2664 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_20_reg_2669 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_reg_2674 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_32_reg_2679 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_reg_2684 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_124_reg_2689 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP1_V_23_cast_fu_2065_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal OP1_V_24_cast_fu_2070_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal OP1_V_25_cast_fu_2075_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal OP1_V_26_cast_fu_2080_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_64_reg_2714 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_64_reg_2714 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP1_V_28_cast_fu_2125_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal OP1_V_29_cast_fu_2130_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal OP1_V_30_cast_fu_2135_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_reg_2734 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_2_reg_2739 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_11_reg_2744 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_reg_2749 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_7_reg_2754 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_23_reg_2759 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_9_reg_2764 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_10_s_reg_2769 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_35_reg_2774 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1715_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_43_reg_2779 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_52_reg_2784 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_reg_2789 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_3_reg_2794 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp34_fu_2295_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp34_reg_2799 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_5_reg_2804 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_58_reg_2809 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_reg_2814 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp16_fu_2403_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp16_reg_2819 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp23_fu_2443_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp23_reg_2824 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp32_fu_2458_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp32_reg_2829 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp44_fu_2470_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp44_reg_2834 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp35_fu_2510_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp35_reg_2839 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp38_fu_2548_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp38_reg_2844 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_enable_reg_pp0_iter0_preg : STD_LOGIC := '0';
    signal ap_port_reg_data_0_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_2_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_4_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_6_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_11_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_13_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_16_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_19_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_24_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_25_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_26_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_27_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_28_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_29_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_30_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_data_31_V_read : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_402_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_403_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_404_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_404_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_405_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_406_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_407_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_407_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_408_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_408_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_409_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_409_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_410_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_411_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_412_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_412_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_413_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_413_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_414_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_415_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_415_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_416_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_417_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_408_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_404_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_412_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_409_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_415_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_shl10_fu_1837_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl12_fu_1849_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl14_cast_fu_1857_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl12_cast_fu_1845_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_1_fu_1861_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl7_fu_1877_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl8_fu_1889_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl7_cast_fu_1885_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl8_cast_fu_1897_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_1_4_fu_1901_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl5_fu_1917_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl6_fu_1929_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl5_cast_fu_1925_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_shl6_cast_fu_1937_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_1_6_fu_1941_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_shl4_fu_1961_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl4_cast_fu_1969_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal OP1_V_10_cast_fu_1957_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_1_10_fu_1973_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl3_fu_1993_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl3_cast_fu_2001_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_neg_fu_2005_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal OP1_V_12_cast_fu_1989_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_1_12_fu_2011_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl2_fu_2037_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl2_cast_fu_2045_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_1_17_fu_2049_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_shl_fu_2085_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl1_fu_2097_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl_cast_fu_2093_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_shl1_cast_fu_2105_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_1_26_fu_2109_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_403_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_shl9_fu_2150_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_shl11_fu_2161_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl11_cast_fu_2168_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_shl9_cast_fu_2157_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_1_2_fu_2172_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_11_fu_2188_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_407_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_417_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_410_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_405_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_406_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_414_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_411_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_125_fu_2261_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_413_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_125_fu_2261_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_416_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_402_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_47_cast_fu_2258_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_50_cast_fu_2271_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_2301_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_fu_2304_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_12_fu_2307_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp19_fu_2375_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp18_fu_2369_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_15_fu_2310_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_18_fu_2313_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_21_fu_2316_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp22_fu_2392_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp21_fu_2386_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp20_fu_2397_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp17_fu_2380_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_24_fu_2319_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_27_fu_2322_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_fu_2326_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp26_fu_2414_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp25_fu_2409_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_33_fu_2329_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_36_fu_2332_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_39_fu_2335_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp29_fu_2431_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp28_fu_2426_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp27_fu_2437_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp24_fu_2420_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_44_fu_2342_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp34_cast_fu_2455_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp33_fu_2449_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_10_15_cast_fu_2339_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp45_fu_2464_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_cast_fu_2365_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_fu_2476_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_56_fu_2479_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp37_fu_2505_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp36_fu_2499_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_59_fu_2482_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_62_fu_2485_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_65_fu_2488_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp41_fu_2521_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp40_fu_2516_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_66_fu_2491_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_68_fu_2495_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp44_cast_fu_2539_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp43_fu_2533_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp42_fu_2542_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp39_fu_2527_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp31_fu_2558_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp30_fu_2562_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp15_fu_2554_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_pipeline_idle_pp0 : STD_LOGIC;

    component myproject_mul_18shbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mul_18smb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component myproject_mul_18sfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_18slbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component myproject_mul_18socq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_18skbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;



begin
    myproject_mul_18shbi_x_U121 : component myproject_mul_18shbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 10,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_23_V_read,
        din1 => grp_fu_402_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_402_p2);

    myproject_mul_18smb6_x_U122 : component myproject_mul_18smb6
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 9,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_1_V_read,
        din1 => grp_fu_403_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_403_p2);

    myproject_mul_18sfYi_x_U123 : component myproject_mul_18sfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 9,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_404_p0,
        din1 => grp_fu_404_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_404_p2);

    myproject_mul_18smb6_x_U124 : component myproject_mul_18smb6
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 9,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_8_V_read,
        din1 => grp_fu_405_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_405_p2);

    myproject_mul_18shbi_x_U125 : component myproject_mul_18shbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 10,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_9_V_read,
        din1 => grp_fu_406_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_406_p2);

    myproject_mul_18shbi_x_U126 : component myproject_mul_18shbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 10,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_407_p0,
        din1 => grp_fu_407_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_407_p2);

    myproject_mul_18slbW_x_U127 : component myproject_mul_18slbW
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 10,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_408_p0,
        din1 => grp_fu_408_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_408_p2);

    myproject_mul_18shbi_x_U128 : component myproject_mul_18shbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 10,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_409_p0,
        din1 => grp_fu_409_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_409_p2);

    myproject_mul_18shbi_x_U129 : component myproject_mul_18shbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 10,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_7_V_read,
        din1 => grp_fu_410_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_410_p2);

    myproject_mul_18smb6_x_U130 : component myproject_mul_18smb6
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 9,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_14_V_read,
        din1 => grp_fu_411_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_411_p2);

    myproject_mul_18socq_U131 : component myproject_mul_18socq
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 6,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_412_p0,
        din1 => grp_fu_412_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_412_p2);

    myproject_mul_18skbM_x_U132 : component myproject_mul_18skbM
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 9,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_413_p0,
        din1 => grp_fu_413_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_413_p2);

    myproject_mul_18shbi_x_U133 : component myproject_mul_18shbi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 10,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_12_V_read,
        din1 => grp_fu_414_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_414_p2);

    myproject_mul_18sfYi_x_U134 : component myproject_mul_18sfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 9,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_415_p0,
        din1 => grp_fu_415_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_415_p2);

    myproject_mul_18smb6_x_U135 : component myproject_mul_18smb6
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 9,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_22_V_read,
        din1 => grp_fu_416_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_416_p2);

    myproject_mul_18skbM_x_U136 : component myproject_mul_18skbM
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 9,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_5_V_read,
        din1 => grp_fu_417_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_417_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_preg <= ap_const_logic_0;
            else
                if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter0_preg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter1_tmp_64_reg_2714 <= tmp_64_reg_2714;
                data_2_V_read_3_reg_2653 <= ap_port_reg_data_2_V_read;
                tmp16_reg_2819 <= tmp16_fu_2403_p2;
                tmp23_reg_2824 <= tmp23_fu_2443_p2;
                tmp32_reg_2829 <= tmp32_fu_2458_p2;
                tmp44_reg_2834 <= tmp44_fu_2470_p2;
                tmp_10_5_reg_2804 <= grp_fu_407_p2(27 downto 10);
                tmp_124_reg_2689 <= p_Val2_1_17_fu_2049_p2(21 downto 10);
                tmp_14_reg_2664 <= p_Val2_1_4_fu_1901_p2(24 downto 10);
                tmp_20_reg_2669 <= p_Val2_1_6_fu_1941_p2(25 downto 10);
                tmp_29_reg_2674 <= p_Val2_1_10_fu_1973_p2(24 downto 10);
                tmp_32_reg_2679 <= p_Val2_1_12_fu_2011_p2(20 downto 10);
                tmp_41_reg_2684 <= ap_port_reg_data_16_V_read(17 downto 3);
                tmp_5_reg_2659 <= p_Val2_1_fu_1861_p2(24 downto 10);
                tmp_61_reg_2814 <= grp_fu_413_p2(26 downto 10);
                tmp_64_reg_2714 <= p_Val2_1_26_fu_2109_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then
                ap_port_reg_data_0_V_read <= data_0_V_read;
                ap_port_reg_data_11_V_read <= data_11_V_read;
                ap_port_reg_data_13_V_read <= data_13_V_read;
                ap_port_reg_data_16_V_read <= data_16_V_read;
                ap_port_reg_data_19_V_read <= data_19_V_read;
                ap_port_reg_data_24_V_read <= data_24_V_read;
                ap_port_reg_data_25_V_read <= data_25_V_read;
                ap_port_reg_data_26_V_read <= data_26_V_read;
                ap_port_reg_data_27_V_read <= data_27_V_read;
                ap_port_reg_data_28_V_read <= data_28_V_read;
                ap_port_reg_data_29_V_read <= data_29_V_read;
                ap_port_reg_data_2_V_read <= data_2_V_read;
                ap_port_reg_data_30_V_read <= data_30_V_read;
                ap_port_reg_data_31_V_read <= data_31_V_read;
                ap_port_reg_data_4_V_read <= data_4_V_read;
                ap_port_reg_data_6_V_read <= data_6_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                reg_1745 <= grp_fu_408_p2(26 downto 10);
                reg_1749 <= grp_fu_404_p2(25 downto 10);
                reg_1753 <= grp_fu_409_p2(27 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then
                tmp34_reg_2799 <= tmp34_fu_2295_p2;
                tmp35_reg_2839 <= tmp35_fu_2510_p2;
                tmp38_reg_2844 <= tmp38_fu_2548_p2;
                tmp_10_2_reg_2739 <= p_Val2_1_2_fu_2172_p2(27 downto 10);
                tmp_10_3_reg_2794 <= grp_fu_402_p2(27 downto 10);
                tmp_10_7_reg_2754 <= grp_fu_410_p2(27 downto 10);
                tmp_10_9_reg_2764 <= grp_fu_406_p2(27 downto 10);
                tmp_10_s_reg_2769 <= grp_fu_414_p2(27 downto 10);
                tmp_11_reg_2744 <= tmp_11_fu_2188_p1(26 downto 10);
                tmp_17_reg_2749 <= grp_fu_417_p2(26 downto 10);
                tmp_23_reg_2759 <= grp_fu_405_p2(26 downto 10);
                tmp_35_reg_2774 <= grp_fu_411_p2(26 downto 10);
                tmp_55_reg_2789 <= grp_fu_416_p2(26 downto 10);
                tmp_8_reg_2734 <= grp_fu_403_p2(26 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then
                tmp_43_reg_2779 <= grp_fu_412_p2(23 downto 10);
                tmp_52_reg_2784 <= grp_fu_415_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                tmp_58_reg_2809 <= grp_fu_415_p2(25 downto 10);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_pipeline_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
        OP1_V_10_cast_fu_1957_p1 <= std_logic_vector(resize(signed(ap_port_reg_data_11_V_read),25));

        OP1_V_12_cast_fu_1989_p1 <= std_logic_vector(resize(signed(ap_port_reg_data_13_V_read),21));

        OP1_V_14_cast_fu_1802_p1 <= std_logic_vector(resize(signed(data_15_V_read),26));

        OP1_V_16_cast_fu_1807_p1 <= std_logic_vector(resize(signed(data_17_V_read),24));

        OP1_V_17_cast_fu_1812_p1 <= std_logic_vector(resize(signed(data_18_V_read),28));

        OP1_V_19_cast_fu_1817_p1 <= std_logic_vector(resize(signed(data_20_V_read),25));

        OP1_V_20_cast_fu_1822_p1 <= std_logic_vector(resize(signed(data_21_V_read),26));

        OP1_V_23_cast_fu_2065_p1 <= std_logic_vector(resize(signed(ap_port_reg_data_24_V_read),28));

        OP1_V_24_cast_fu_2070_p1 <= std_logic_vector(resize(signed(ap_port_reg_data_25_V_read),28));

        OP1_V_25_cast_fu_2075_p1 <= std_logic_vector(resize(signed(ap_port_reg_data_26_V_read),26));

        OP1_V_26_cast_fu_2080_p1 <= std_logic_vector(resize(signed(ap_port_reg_data_27_V_read),27));

        OP1_V_28_cast_fu_2125_p1 <= std_logic_vector(resize(signed(ap_port_reg_data_29_V_read),26));

        OP1_V_29_cast_fu_2130_p1 <= std_logic_vector(resize(signed(ap_port_reg_data_30_V_read),27));

        OP1_V_30_cast_fu_2135_p1 <= std_logic_vector(resize(signed(ap_port_reg_data_31_V_read),24));

        OP1_V_3_cast_fu_1762_p1 <= std_logic_vector(resize(signed(data_3_V_read),27));

        OP1_V_cast_fu_1787_p1 <= std_logic_vector(resize(signed(data_10_V_read),27));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1 downto 1);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_preg)
    begin
        if ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_preg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_pipeline_idle_pp0_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_pipeline_idle_pp0 <= ap_const_logic_1;
        else 
            ap_pipeline_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= std_logic_vector(unsigned(tmp30_fu_2562_p2) + unsigned(tmp15_fu_2554_p2));
    grp_fu_1715_p4 <= grp_fu_412_p2(23 downto 10);
    grp_fu_402_p1 <= ap_const_lv28_FFFFED4(10 - 1 downto 0);
    grp_fu_403_p1 <= ap_const_lv27_7FFFF71(9 - 1 downto 0);

    grp_fu_404_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, OP1_V_14_cast_fu_1802_p1, OP1_V_28_cast_fu_2125_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_404_p0 <= OP1_V_28_cast_fu_2125_p1(18 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_404_p0 <= OP1_V_14_cast_fu_1802_p1(18 - 1 downto 0);
            else 
                grp_fu_404_p0 <= "XXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_404_p0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_404_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_404_p1 <= ap_const_lv26_3FFFF97(9 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_404_p1 <= ap_const_lv26_5C(9 - 1 downto 0);
            else 
                grp_fu_404_p1 <= "XXXXXXXXX";
            end if;
        else 
            grp_fu_404_p1 <= "XXXXXXXXX";
        end if; 
    end process;

    grp_fu_405_p1 <= ap_const_lv27_7FFFF52(9 - 1 downto 0);
    grp_fu_406_p1 <= ap_const_lv28_FFFFEB3(10 - 1 downto 0);

    grp_fu_407_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, OP1_V_3_cast_fu_1762_p1, OP1_V_24_cast_fu_2070_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_407_p0 <= OP1_V_24_cast_fu_2070_p1(18 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_407_p0 <= OP1_V_3_cast_fu_1762_p1(18 - 1 downto 0);
            else 
                grp_fu_407_p0 <= "XXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_407_p0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_407_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_407_p1 <= ap_const_lv28_FFFFE87(10 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_407_p1 <= ap_const_lv27_7FFFF4B(10 - 1 downto 0);
            else 
                grp_fu_407_p1 <= "XXXXXXXXXX";
            end if;
        else 
            grp_fu_407_p1 <= "XXXXXXXXXX";
        end if; 
    end process;


    grp_fu_408_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, OP1_V_cast_fu_1787_p1, OP1_V_29_cast_fu_2130_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_408_p0 <= OP1_V_29_cast_fu_2130_p1(18 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_408_p0 <= OP1_V_cast_fu_1787_p1(18 - 1 downto 0);
            else 
                grp_fu_408_p0 <= "XXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_408_p0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_408_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_408_p1 <= ap_const_lv27_7FFFF46(10 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_408_p1 <= ap_const_lv27_F2(10 - 1 downto 0);
            else 
                grp_fu_408_p1 <= "XXXXXXXXXX";
            end if;
        else 
            grp_fu_408_p1 <= "XXXXXXXXXX";
        end if; 
    end process;


    grp_fu_409_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, OP1_V_17_cast_fu_1812_p1, OP1_V_23_cast_fu_2065_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_409_p0 <= OP1_V_23_cast_fu_2065_p1(18 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_409_p0 <= OP1_V_17_cast_fu_1812_p1(18 - 1 downto 0);
            else 
                grp_fu_409_p0 <= "XXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_409_p0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_409_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_409_p1 <= ap_const_lv28_FFFFEB6(10 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_409_p1 <= ap_const_lv28_FFFFE4A(10 - 1 downto 0);
            else 
                grp_fu_409_p1 <= "XXXXXXXXXX";
            end if;
        else 
            grp_fu_409_p1 <= "XXXXXXXXXX";
        end if; 
    end process;

    grp_fu_410_p1 <= ap_const_lv28_FFFFE92(10 - 1 downto 0);
    grp_fu_411_p1 <= ap_const_lv27_7FFFF5C(9 - 1 downto 0);

    grp_fu_412_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, OP1_V_16_cast_fu_1807_p1, OP1_V_30_cast_fu_2135_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_412_p0 <= OP1_V_30_cast_fu_2135_p1(18 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_412_p0 <= OP1_V_16_cast_fu_1807_p1(18 - 1 downto 0);
            else 
                grp_fu_412_p0 <= "XXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_412_p0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_412_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_412_p1 <= ap_const_lv24_1D(6 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_412_p1 <= ap_const_lv24_19(6 - 1 downto 0);
            else 
                grp_fu_412_p1 <= "XXXXXX";
            end if;
        else 
            grp_fu_412_p1 <= "XXXXXX";
        end if; 
    end process;


    grp_fu_413_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, OP1_V_19_cast_fu_1817_p1, OP1_V_26_cast_fu_2080_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_413_p0 <= OP1_V_26_cast_fu_2080_p1(18 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_413_p0 <= OP1_V_19_cast_fu_1817_p1(18 - 1 downto 0);
            else 
                grp_fu_413_p0 <= "XXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_413_p0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_413_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_413_p1 <= ap_const_lv27_9F(9 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_413_p1 <= ap_const_lv25_32(9 - 1 downto 0);
            else 
                grp_fu_413_p1 <= "XXXXXXXXX";
            end if;
        else 
            grp_fu_413_p1 <= "XXXXXXXXX";
        end if; 
    end process;

    grp_fu_414_p1 <= ap_const_lv28_FFFFE73(10 - 1 downto 0);

    grp_fu_415_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, OP1_V_20_cast_fu_1822_p1, OP1_V_25_cast_fu_2075_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_415_p0 <= OP1_V_25_cast_fu_2075_p1(18 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_415_p0 <= OP1_V_20_cast_fu_1822_p1(18 - 1 downto 0);
            else 
                grp_fu_415_p0 <= "XXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_415_p0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_415_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_415_p1 <= ap_const_lv26_4A(9 - 1 downto 0);
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_415_p1 <= ap_const_lv26_3FFFF9F(9 - 1 downto 0);
            else 
                grp_fu_415_p1 <= "XXXXXXXXX";
            end if;
        else 
            grp_fu_415_p1 <= "XXXXXXXXX";
        end if; 
    end process;

    grp_fu_416_p1 <= ap_const_lv27_7FFFF0B(9 - 1 downto 0);
    grp_fu_417_p1 <= ap_const_lv27_BF(9 - 1 downto 0);
    p_Val2_1_10_fu_1973_p2 <= std_logic_vector(signed(p_shl4_cast_fu_1969_p1) + signed(OP1_V_10_cast_fu_1957_p1));
    p_Val2_1_12_fu_2011_p2 <= std_logic_vector(unsigned(p_neg_fu_2005_p2) - unsigned(OP1_V_12_cast_fu_1989_p1));
    p_Val2_1_17_fu_2049_p2 <= std_logic_vector(unsigned(ap_const_lv22_0) - unsigned(p_shl2_cast_fu_2045_p1));
    p_Val2_1_26_fu_2109_p2 <= std_logic_vector(signed(p_shl_cast_fu_2093_p1) - signed(p_shl1_cast_fu_2105_p1));
    p_Val2_1_2_fu_2172_p2 <= std_logic_vector(signed(p_shl11_cast_fu_2168_p1) - signed(p_shl9_cast_fu_2157_p1));
    p_Val2_1_4_fu_1901_p2 <= std_logic_vector(signed(p_shl7_cast_fu_1885_p1) + signed(p_shl8_cast_fu_1897_p1));
    p_Val2_1_6_fu_1941_p2 <= std_logic_vector(signed(p_shl5_cast_fu_1925_p1) + signed(p_shl6_cast_fu_1937_p1));
    p_Val2_1_fu_1861_p2 <= std_logic_vector(signed(p_shl14_cast_fu_1857_p1) - signed(p_shl12_cast_fu_1845_p1));
    p_neg_fu_2005_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(p_shl3_cast_fu_2001_p1));
    p_shl10_fu_1837_p3 <= (ap_port_reg_data_0_V_read & ap_const_lv6_0);
        p_shl11_cast_fu_2168_p1 <= std_logic_vector(resize(signed(p_shl11_fu_2161_p3),28));

    p_shl11_fu_2161_p3 <= (data_2_V_read_3_reg_2653 & ap_const_lv6_0);
        p_shl12_cast_fu_1845_p1 <= std_logic_vector(resize(signed(p_shl10_fu_1837_p3),25));

    p_shl12_fu_1849_p3 <= (ap_port_reg_data_0_V_read & ap_const_lv2_0);
        p_shl14_cast_fu_1857_p1 <= std_logic_vector(resize(signed(p_shl12_fu_1849_p3),25));

        p_shl1_cast_fu_2105_p1 <= std_logic_vector(resize(signed(p_shl1_fu_2097_p3),26));

    p_shl1_fu_2097_p3 <= (ap_port_reg_data_28_V_read & ap_const_lv3_0);
        p_shl2_cast_fu_2045_p1 <= std_logic_vector(resize(signed(p_shl2_fu_2037_p3),22));

    p_shl2_fu_2037_p3 <= (ap_port_reg_data_19_V_read & ap_const_lv3_0);
        p_shl3_cast_fu_2001_p1 <= std_logic_vector(resize(signed(p_shl3_fu_1993_p3),21));

    p_shl3_fu_1993_p3 <= (ap_port_reg_data_13_V_read & ap_const_lv2_0);
        p_shl4_cast_fu_1969_p1 <= std_logic_vector(resize(signed(p_shl4_fu_1961_p3),25));

    p_shl4_fu_1961_p3 <= (ap_port_reg_data_11_V_read & ap_const_lv6_0);
        p_shl5_cast_fu_1925_p1 <= std_logic_vector(resize(signed(p_shl5_fu_1917_p3),26));

    p_shl5_fu_1917_p3 <= (ap_port_reg_data_6_V_read & ap_const_lv7_0);
        p_shl6_cast_fu_1937_p1 <= std_logic_vector(resize(signed(p_shl6_fu_1929_p3),26));

    p_shl6_fu_1929_p3 <= (ap_port_reg_data_6_V_read & ap_const_lv5_0);
        p_shl7_cast_fu_1885_p1 <= std_logic_vector(resize(signed(p_shl7_fu_1877_p3),25));

    p_shl7_fu_1877_p3 <= (ap_port_reg_data_4_V_read & ap_const_lv6_0);
        p_shl8_cast_fu_1897_p1 <= std_logic_vector(resize(signed(p_shl8_fu_1889_p3),25));

    p_shl8_fu_1889_p3 <= (ap_port_reg_data_4_V_read & ap_const_lv1_0);
        p_shl9_cast_fu_2157_p1 <= std_logic_vector(resize(signed(p_shl9_fu_2150_p3),28));

    p_shl9_fu_2150_p3 <= (data_2_V_read_3_reg_2653 & ap_const_lv9_0);
        p_shl_cast_fu_2093_p1 <= std_logic_vector(resize(signed(p_shl_fu_2085_p3),26));

    p_shl_fu_2085_p3 <= (ap_port_reg_data_28_V_read & ap_const_lv7_0);
    tmp15_fu_2554_p2 <= std_logic_vector(unsigned(tmp23_reg_2824) + unsigned(tmp16_reg_2819));
    tmp16_fu_2403_p2 <= std_logic_vector(unsigned(tmp20_fu_2397_p2) + unsigned(tmp17_fu_2380_p2));
    tmp17_fu_2380_p2 <= std_logic_vector(unsigned(tmp19_fu_2375_p2) + unsigned(tmp18_fu_2369_p2));
    tmp18_fu_2369_p2 <= std_logic_vector(signed(tmp_6_fu_2301_p1) + signed(tmp_9_fu_2304_p1));
    tmp19_fu_2375_p2 <= std_logic_vector(unsigned(tmp_10_2_reg_2739) + unsigned(tmp_12_fu_2307_p1));
    tmp20_fu_2397_p2 <= std_logic_vector(unsigned(tmp22_fu_2392_p2) + unsigned(tmp21_fu_2386_p2));
    tmp21_fu_2386_p2 <= std_logic_vector(signed(tmp_15_fu_2310_p1) + signed(tmp_18_fu_2313_p1));
    tmp22_fu_2392_p2 <= std_logic_vector(signed(tmp_21_fu_2316_p1) + signed(tmp_10_7_reg_2754));
    tmp23_fu_2443_p2 <= std_logic_vector(unsigned(tmp27_fu_2437_p2) + unsigned(tmp24_fu_2420_p2));
    tmp24_fu_2420_p2 <= std_logic_vector(unsigned(tmp26_fu_2414_p2) + unsigned(tmp25_fu_2409_p2));
    tmp25_fu_2409_p2 <= std_logic_vector(signed(tmp_24_fu_2319_p1) + signed(tmp_10_9_reg_2764));
    tmp26_fu_2414_p2 <= std_logic_vector(signed(tmp_27_fu_2322_p1) + signed(tmp_30_fu_2326_p1));
    tmp27_fu_2437_p2 <= std_logic_vector(unsigned(tmp29_fu_2431_p2) + unsigned(tmp28_fu_2426_p2));
    tmp28_fu_2426_p2 <= std_logic_vector(unsigned(tmp_10_s_reg_2769) + unsigned(tmp_33_fu_2329_p1));
    tmp29_fu_2431_p2 <= std_logic_vector(signed(tmp_36_fu_2332_p1) + signed(tmp_39_fu_2335_p1));
    tmp30_fu_2562_p2 <= std_logic_vector(unsigned(tmp38_reg_2844) + unsigned(tmp31_fu_2558_p2));
    tmp31_fu_2558_p2 <= std_logic_vector(unsigned(tmp35_reg_2839) + unsigned(tmp32_reg_2829));
    tmp32_fu_2458_p2 <= std_logic_vector(signed(tmp34_cast_fu_2455_p1) + signed(tmp33_fu_2449_p2));
    tmp33_fu_2449_p2 <= std_logic_vector(signed(tmp_44_fu_2342_p1) + signed(reg_1753));
        tmp34_cast_fu_2455_p1 <= std_logic_vector(resize(signed(tmp34_reg_2799),18));

    tmp34_fu_2295_p2 <= std_logic_vector(signed(tmp_47_cast_fu_2258_p1) + signed(tmp_50_cast_fu_2271_p1));
    tmp35_fu_2510_p2 <= std_logic_vector(unsigned(tmp37_fu_2505_p2) + unsigned(tmp36_fu_2499_p2));
    tmp36_fu_2499_p2 <= std_logic_vector(signed(tmp_53_fu_2476_p1) + signed(tmp_56_fu_2479_p1));
    tmp37_fu_2505_p2 <= std_logic_vector(unsigned(tmp_10_3_reg_2794) + unsigned(reg_1753));
    tmp38_fu_2548_p2 <= std_logic_vector(unsigned(tmp42_fu_2542_p2) + unsigned(tmp39_fu_2527_p2));
    tmp39_fu_2527_p2 <= std_logic_vector(unsigned(tmp41_fu_2521_p2) + unsigned(tmp40_fu_2516_p2));
    tmp40_fu_2516_p2 <= std_logic_vector(unsigned(tmp_10_5_reg_2804) + unsigned(tmp_59_fu_2482_p1));
    tmp41_fu_2521_p2 <= std_logic_vector(signed(tmp_62_fu_2485_p1) + signed(tmp_65_fu_2488_p1));
    tmp42_fu_2542_p2 <= std_logic_vector(signed(tmp44_cast_fu_2539_p1) + signed(tmp43_fu_2533_p2));
    tmp43_fu_2533_p2 <= std_logic_vector(signed(tmp_66_fu_2491_p1) + signed(tmp_68_fu_2495_p1));
        tmp44_cast_fu_2539_p1 <= std_logic_vector(resize(signed(tmp44_reg_2834),18));

    tmp44_fu_2470_p2 <= std_logic_vector(unsigned(tmp45_fu_2464_p2) + unsigned(tmp_cast_fu_2365_p1));
    tmp45_fu_2464_p2 <= std_logic_vector(signed(tmp_10_15_cast_fu_2339_p1) + signed(ap_const_lv16_FF86));
        tmp_10_15_cast_fu_2339_p1 <= std_logic_vector(resize(signed(tmp_41_reg_2684),16));

    tmp_11_fu_2188_p1 <= grp_fu_407_p2(27 - 1 downto 0);
    tmp_125_fu_2261_p1 <= grp_fu_413_p2(25 - 1 downto 0);
    tmp_125_fu_2261_p4 <= tmp_125_fu_2261_p1(24 downto 10);
        tmp_12_fu_2307_p1 <= std_logic_vector(resize(signed(tmp_11_reg_2744),18));

        tmp_15_fu_2310_p1 <= std_logic_vector(resize(signed(tmp_14_reg_2664),18));

        tmp_18_fu_2313_p1 <= std_logic_vector(resize(signed(tmp_17_reg_2749),18));

        tmp_21_fu_2316_p1 <= std_logic_vector(resize(signed(tmp_20_reg_2669),18));

        tmp_24_fu_2319_p1 <= std_logic_vector(resize(signed(tmp_23_reg_2759),18));

        tmp_27_fu_2322_p1 <= std_logic_vector(resize(signed(reg_1745),18));

        tmp_30_fu_2326_p1 <= std_logic_vector(resize(signed(tmp_29_reg_2674),18));

        tmp_33_fu_2329_p1 <= std_logic_vector(resize(signed(tmp_32_reg_2679),18));

        tmp_36_fu_2332_p1 <= std_logic_vector(resize(signed(tmp_35_reg_2774),18));

        tmp_39_fu_2335_p1 <= std_logic_vector(resize(signed(reg_1749),18));

        tmp_44_fu_2342_p1 <= std_logic_vector(resize(signed(tmp_43_reg_2779),18));

        tmp_47_cast_fu_2258_p1 <= std_logic_vector(resize(signed(tmp_124_reg_2689),16));

        tmp_50_cast_fu_2271_p1 <= std_logic_vector(resize(signed(tmp_125_fu_2261_p4),16));

        tmp_53_fu_2476_p1 <= std_logic_vector(resize(signed(tmp_52_reg_2784),18));

        tmp_56_fu_2479_p1 <= std_logic_vector(resize(signed(tmp_55_reg_2789),18));

        tmp_59_fu_2482_p1 <= std_logic_vector(resize(signed(tmp_58_reg_2809),18));

        tmp_62_fu_2485_p1 <= std_logic_vector(resize(signed(tmp_61_reg_2814),18));

        tmp_65_fu_2488_p1 <= std_logic_vector(resize(signed(ap_pipeline_reg_pp0_iter1_tmp_64_reg_2714),18));

        tmp_66_fu_2491_p1 <= std_logic_vector(resize(signed(reg_1749),18));

        tmp_68_fu_2495_p1 <= std_logic_vector(resize(signed(reg_1745),18));

        tmp_6_fu_2301_p1 <= std_logic_vector(resize(signed(tmp_5_reg_2659),18));

        tmp_9_fu_2304_p1 <= std_logic_vector(resize(signed(tmp_8_reg_2734),18));

        tmp_cast_fu_2365_p1 <= std_logic_vector(resize(signed(grp_fu_1715_p4),16));

end behav;
